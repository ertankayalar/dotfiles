# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
*i*) ;;
*) return ;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
	debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
xterm-color | *-256color) color_prompt=yes ;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
	if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
		# We have color support; assume it's compliant with Ecma-48
		# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
		# a case would tend to support setf rather than setaf.)
		color_prompt=yes
	else
		color_prompt=
	fi
fi

if [ "$color_prompt" = yes ]; then
	PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
	PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm* | rxvt*)
	PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
	;;
*) ;;
esac

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
	test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
	alias ls='ls --color=auto'
	#alias dir='dir --color=auto'
	#alias vdir='vdir --color=auto'

	alias grep='grep --color=auto'
	alias fgrep='fgrep --color=auto'
	alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
	. ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
	if [ -f /usr/share/bash-completion/bash_completion ]; then
		. /usr/share/bash-completion/bash_completion
	elif [ -f /etc/bash_completion ]; then
		. /etc/bash_completion
	fi
fi

eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

# prompt
eval "$(starship init bash)"
# tools
eval "$(zoxide init bash)"

#fix obvious typo's
alias ..='cd ../'
alias ...='cd ../../'
alias ....='cd ../../../'
alias .....='cd ../../../../'
alias pdw='pwd'

# Dotfiles & Files
alias bs='xed ~/.bashrc'
alias reload='source ~/.bashrc'
alias v="nvim"
alias e="xed"

# editor
alias v='nvim'
alias nv='nvim'
alias lv='lvim'
alias vim="vim"

# exa
alias exa='exa --color auto'
alias ls='exa -G --icons'
alias l='ls'
alias la='ls -a'
alias ll='exa --icons -l -a'
alias lg='ll --git'
alias ld='ll -D -1' # dir only
alias ldr='ld -R'   # sub dir
alias lt='ll -D -T' # tree dir

alias gcf='cd $HOME/.config'
alias gdl='cd $HOME/Downloads'
alias cdot='cd $HOME/OS/dotfiles'
alias cdis='cd $HOME/OS/install-scripts'
alias cdm="cd /run/media/ertan/"
alias pr='cd $HOME/Projects/'
alias wi="cd $HOME/Wiki"
alias wik="cd $HOME/Wiki"

alias install='sudo apt install'
alias update='sudo apt update'
alias upgrade='sudo apt upgrade'
alias uplist='apt list --upgradable'
alias l='exa -ll --color=always --group-directories-first'
alias ls='exa -al --header --icons --group-directories-first'
alias df='df -h'
alias free='free -h'

## Colorize the grep command output for ease of use (good for log files)##
alias grep='grep --color=auto'
alias egrep='egrep --color=auto'
alias fgrep='fgrep --color=auto'

#git
alias gc="git clone"
alias gits="git status"
alias gst='git status'
alias ga='git add'
alias gaa='git add .'
alias gc='git commit'
alias gcm='git commit -m'
alias gp='git push'
alias gpo="git push origin main"
alias gpb="git push backup main"
alias gpob="gpo && gpb"
#tmux
alias tmuxc="tmux new-session -s"
alias tmuxa="tmux attach-session -t"
alias tmuxk="tmux kill-session -t"
alias tmuxka="tmux kill-server"

# docker
alias docstart="sudo systemctl start docker.service"
alias docenable="sudo systemctl enable docker.service"
alias docstop="sudo systemctl stop docker.service"

# Node

alias pnpmup='pnpm add -g @pnpm/exe'

# npm check updates
alias ncupatch="npx npm-check-updates -u -t patch"
alias ncuminor='npx npm-check-updates -u -t minor'
alias ncumajor='npx npm-check-updates -u -f node-fetch'

# Python
alias py='python'
alias pyenva='source venv/bin/activate'
alias pyenvd='deactivate'
alias pyenvc='py -m venv venv'
alias pipreq='pip freeze > requirements.txt'
alias pipinst='pip install'
alias pipinstr='pip install -r requirements.txt'
alias pipup='pip install --upgrade pip'

# Rails
alias br='bin/rails'
alias brc='bin/rails console'

# System Info
alias free="free -mt"
#hardware info --short
alias hw="hwinfo --short"

# caps:escape
alias capsesc='setxkbmap -option caps:escape'

#continue download
alias wget="wget -c"

#ps
alias psa="ps auxf"
alias psgrep="ps aux | grep -v grep | grep -i -e VSZ -e"

#hardware info --short
alias hw="hwinfo --short"

#systeminfo
alias probe="sudo -E hw-probe -all -upload"
alias sysfailed="systemctl list-units --failed"

#search content with ripgrep
alias rg="rg --sort path"

#get the error messages from journalctl
alias jctl="journalctl -p 3 -xb"

#search content with ripgrep
alias rg="rg --sort path"

#Recent Installed Packages
alias rip="expac --timefmt='%Y-%m-%d %T' '%l\t%n %v' | sort | tail -200 | nl"
alias riplong="expac --timefmt='%Y-%m-%d %T' '%l\t%n %v' | sort | tail -3000 | nl"

# paths
export PATH="/usr/local/go/bin:$PATH"
export PATH="$HOME/bin:$HOME/.local/bin::$PATH"

# Hugo
alias hugomin="hugo --gc --minify"
alias hugoserv="hugo server --disableFastRender"

# Hugo Cache Dir
#export HUGO_CACHEDIR="$HOME/.hugo/tmp"

. "$HOME/.asdf/asdf.sh"
. "$HOME/.asdf/completions/asdf.bash"
export EDITOR="code --wait"

# bun
export BUN_INSTALL="$HOME/.bun"
export PATH=$BUN_INSTALL/bin:$PATH
